//Primeira etapa do Trabalho
//Alunos: 
//        Ivisson de Jesus Silva
//        Felipe Meneses dos Santos
package br.ufs.dcomp.ChatRabbitMQ;

import br.ufs.dcomp.ChatRabbitMQ.arquivos.DownloadUpload;
import com.google.protobuf.ByteString;
import com.google.protobuf.Internal;
import com.rabbitmq.client.*;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Scanner;
import jdk.nashorn.internal.objects.NativeString;

public class Chat {

    private static String destinatario = " ";

    public static void main(String[] argv) throws Exception {

        ConnectionFactory factory = new ConnectionFactory();
        factory.setUri("amqp://ivissonijs:132435@100.24.58.45");
        Connection connection = factory.newConnection();
        Channel channel = connection.createChannel();

        Scanner in = new Scanner(System.in);//-->Entrada de dados
        String user; //-->Para armazenar o usuÃ¡rio
//-----------Garantir a quebra de linha no Mac, Windowns e Linux----------------
        String quebraLinha = System.getProperty("line.separator"); //Recebendo metÃ³do que quebra linha 
//-----------Data e Hora atual--------------------------------------------------
        Date data_Hora = new Date();
        String data = new SimpleDateFormat("dd/MM/yyyy").format(data_Hora);
        String hora = new SimpleDateFormat("HH:mm:ss").format(data_Hora);
        ByteString bufferConteudo;//ByteStringo para enviar o conteudo
        ChatGrupo grupo = new ChatGrupo();//Instanciando Classe de CriaÃ§Ã£o de grupos
        MensagemProto msg = new MensagemProto();//InstÃ‚ncia da Classe de Envio e Recebimento de Mensagens via ProtoBuf
        DownloadUpload du = new DownloadUpload();
//----------Inserir usuÃ¡rio e criar fila no Rabbitmq----------------------------
        System.out.println("Digite o nome do usuÃ¡rio!");
        System.out.print("User: ");
//----------Acrescenta o @ na frente do usuÃ¡rio---------------------------------
        user = ("@" + in.nextLine());
        System.out.println("Iniciando Chat ....");
        System.out.println("Selecione um amigo(a) ou um grupo a conversar...");

//-----------------------(queue-name, durable, exclusive, auto-delete, params);-    
        channel.queueDeclare(user, false, false, false, null);
//------------------------------------------------------------------------------
//----------------MetÃ³do Consumidor de Mensagens e arquivos----------------------
        Consumer consumer = new DefaultConsumer(channel) {
            @Override
            public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body)
                    throws IOException {
                msg.mensagemProtoReceber(destinatario, body);
                FileOutputStream file = new FileOutputStream(new File("F:\\Documentos\\NetBeansProjects\\Chat_Rabbit\\src\\br\\ufs\\dcomp\\ChatRabbitMQ\\foto.png"));
                file.write(body);
            }
        };
//-----------------------(queue-name, autoAck, consumer);-----------------------    
        channel.basicConsume(user, true, consumer);
//------------------------------------------------------------------------------
//-------Neste momento o destinatÃ¡rio estÃ¡ null, logo sÃ³ imprimirÃ¡ no promt ">>"    
        System.out.print(destinatario + ">>");
        destinatario = in.nextLine();
//------------------------------------------------------------------------------
//---A variÃ¡vel ativadorUsuario recebe o primeiro caracter digitado pelo usuÃ¡rio
        char ativadorUsuario = destinatario.charAt(0);
        while ((ativadorUsuario != '@') && (ativadorUsuario != '#')) { 
            System.out.print(">>");
            destinatario = in.nextLine();            
            if (destinatario.length() > 8) {
                do {
                    if (destinatario.length() > 8) {//Adcionar usuÃ¡rio a um grupo
                        if ("!addUser".equalsIgnoreCase(destinatario.substring(0, 8))) {
                            //--------------------CriaÃ§Ã£o de Grupo no promt inicial
                            grupo.addUser(destinatario);
                            destinatario = " ";
                            System.out.print(destinatario + ">>");
                            destinatario = in.nextLine();
                        }//-------------------fim do se
                    }
                    if (destinatario.length() > 9) {//Criar um Grupo
                        if ("!newGroup".equalsIgnoreCase(destinatario.substring(0, 9))) {
                            grupo.newGrupo(destinatario, user);//Criando Grupo e adcionando o usuÃ¡rio
                            destinatario = " ";
                            System.out.print(destinatario + ">>");
                            destinatario = in.nextLine(); //Recebe a mensagem a ser enviada
                        }
                    }
                    if (destinatario.length() > 12) {//Remover Grupo
                        if ("!removeGroup".equalsIgnoreCase(destinatario.substring(0, 12))) {
                            grupo.removeGroup(destinatario);
                            destinatario = " ";
                            System.out.print(destinatario + ">>");
                            destinatario = in.nextLine(); //Recebe a mensagem a ser enviada                    
                        }
                    }
                    if (destinatario.length() > 13) {//Remover usuÃ¡rio de um grupo
                        if ("!delFromGroup".equalsIgnoreCase(destinatario.substring(0, 13))) {
                            grupo.delFromGroup(destinatario);
                            destinatario = " ";
                            System.out.print(destinatario + ">>");
                            destinatario = in.nextLine(); //Recebe a mensagem a ser enviada                 
                        }
                    } else {
                        break;
                    }
                } while ("!addUser".equalsIgnoreCase(destinatario.substring(0, 8))
                        || "!newGroup".equalsIgnoreCase(destinatario.substring(0, 9))
                        || "!removeGroup".equalsIgnoreCase(destinatario.substring(0, 12))
                        || "!delFromGroup".equalsIgnoreCase(destinatario.substring(0, 13)));
            }       
            ativadorUsuario = destinatario.charAt(0);
        }//fim while
//---------------------------------------------------------------------------------------------------        
        //Segunda Parte, depois de selecionado o destinatÃ¡rio
        while (true) {
            //imprimir na tela ex: usuÃ¡rioDestino >>   
            System.out.print(destinatario + ">>");
            String mensagemEnviar = in.nextLine(); //Recebe a mensagem a ser enviada
            if (mensagemEnviar.length() > 7) {
                do {
                    if(mensagemEnviar.length() > 7){
                        if("!upload".equalsIgnoreCase(mensagemEnviar.substring(0, 7))){
                            du.upload(mensagemEnviar);
                            System.out.println(destinatario);
                            System.out.print(destinatario + ">>");
                            mensagemEnviar = in.nextLine();
                        }
                    }
                    if (mensagemEnviar.length() > 8) {//Adcionar usuÃ¡rio a um grupo
                        if ("!addUser".equalsIgnoreCase(mensagemEnviar.substring(0, 8))) {
                            //--------------------CriaÃ§Ã£o de Grupo no promt inicial
                            grupo.addUser(mensagemEnviar);
                            System.out.print(destinatario + ">>");
                            mensagemEnviar = in.nextLine();
                        }//-------------------fim do se
                    }
                    if (mensagemEnviar.length() > 9) {//Criar um Grupo
                        if ("!newGroup".equalsIgnoreCase(mensagemEnviar.substring(0, 9))) {
                            grupo.newGrupo(mensagemEnviar, user);//Criando Grupo e adcionando o usuÃ¡rio
                            System.out.print(destinatario + ">>");
                            mensagemEnviar = in.nextLine(); //Recebe a mensagem a ser enviada
                        }
                    }
                    if (mensagemEnviar.length() > 12) {//Remover Grupo
                        if ("!removeGroup".equalsIgnoreCase(mensagemEnviar.substring(0, 12))) {
                            grupo.removeGroup(mensagemEnviar);
                            System.out.print(destinatario + ">>");
                            mensagemEnviar = in.nextLine(); //Recebe a mensagem a ser enviada                    
                        }
                    }
                    if (mensagemEnviar.length() > 13) {//Remover usuÃ¡rio de um grupo
                        if ("!delFromGroup".equalsIgnoreCase(mensagemEnviar.substring(0, 13))) {
                            grupo.delFromGroup(mensagemEnviar);
                            System.out.print(destinatario + ">>");
                            mensagemEnviar = in.nextLine(); //Recebe a mensagem a ser enviada
                        }
                    } else {
                        break;
                    }
                } while ("!upload".equalsIgnoreCase(mensagemEnviar.substring(0, 7))
                        ||"!addUser".equalsIgnoreCase(mensagemEnviar.substring(0, 8))
                        || "!newGroup".equalsIgnoreCase(mensagemEnviar.substring(0, 9))
                        || "!removeGroup".equalsIgnoreCase(mensagemEnviar.substring(0, 12))
                        || "!delFromGroup".equalsIgnoreCase(mensagemEnviar.substring(0, 13)));
            }
            /*Se o usuÃ¡rio digitar '@' na frente da mensagem, o promt automaticamente serÃ¡ mudado para
             o nome do novo usuÃ¡rio a enviar a mensagem*/
            char mudarUsuario = ' ';
            do {
                try {//Garantir que o usuÃ¡rio digite algo
                    mudarUsuario = mensagemEnviar.charAt(0); //mudarDestino recebe o primeiro caracter da String mensagemEnviar 
                    if (mudarUsuario == '@' || mudarUsuario == '#') {
                        destinatario = mensagemEnviar;
                        System.out.print(destinatario + ">>");
                        mensagemEnviar = in.nextLine(); //Recebe a mensagem a ser enviada 
                        mudarUsuario = mensagemEnviar.charAt(0);
                    }
                } catch (StringIndexOutOfBoundsException e) {
                    System.err.println("Digite algo!");
                    System.out.print(destinatario + ">>");
                    mensagemEnviar = in.nextLine();
                }
            } while (mudarUsuario == '@' || mudarUsuario == '#');

             if(mensagemEnviar.length() > 7){
            if("!upload".equalsIgnoreCase(mensagemEnviar.substring(0, 7))){
                            bufferConteudo = ByteString.copyFrom(du.upload(mensagemEnviar));//Transformar o arquivo em ByteString
                            msg.mensagemProtoEnviar(bufferConteudo, user, data, hora, hora, " ", " ");//Publica o arquivo
                            System.out.println(destinatario);
                            System.out.print(destinatario + ">>");
                            mensagemEnviar = in.nextLine();
                        }
             }
            
            ativadorUsuario = destinatario.charAt(0);
            switch (ativadorUsuario) {
                case '@'://Publica a mensagem em bytes para um amigo
                    //Complemento da mensagem a ser enviada
                    mensagemEnviar = mensagemEnviar + quebraLinha;
                    //Usa o metÃ³do sustring para tirar o @ da frente do nome do usuÃ¡rio
                    String usuario = user.substring(1);
                    bufferConteudo = ByteString.copyFromUtf8(mensagemEnviar);
                    //SerializaÃ§Ã£o dos Dados para enviar:  //(corpo mensagem, usuÃ¡rio, data, hora, nome do Grupo)
                    byte[] buffer = msg.mensagemProtoEnviar(bufferConteudo, usuario, data, hora, " ", " ", " ");
                    //Publicando Mensagem
                    channel.basicPublish("", destinatario, null, buffer /*message.getBytes("UTF-8")*/);
                    break;
                case '#'://Publica a mensagem em bytes para um grupo
                    //Complemento da mensagem a ser enviada
                    mensagemEnviar = mensagemEnviar + quebraLinha;
                    //Usa o metÃ³do sustring para tirar o @ da frente do nome do usuÃ¡rio
                    usuario = user.substring(1);
                    bufferConteudo = ByteString.copyFromUtf8(mensagemEnviar);
                    //SerializaÃ§Ã£o dos Dados para enviar: //(corpo mensagem, usuÃ¡rio, data, hora, nome do Grupo)
                    buffer = msg.mensagemProtoEnviar(bufferConteudo, usuario, data, hora, destinatario, " ", " ");
                    
                    //Publicando Mensagem
                    channel.basicPublish(destinatario, "", null, buffer /*message.getBytes("UTF-8")*/);
                    break;
            }//fim swithc
        }//fim while true
    }//fim Main
}//Fim classe

